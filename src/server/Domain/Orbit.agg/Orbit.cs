using System.Collections.ObjectModel;
using Core;

namespace Domain;

[AutoGeneratedKey]
public class Orbit : Aggregate
{
    protected Orbit() { }

    public Orbit(string title, OwnerCompany owner, int startYear, Month startMonth, int yearDuration)
    {
        Owner= owner;
        Title= title;
        SetYears(startYear, startMonth, yearDuration);
    }

    [IdentifierKey]
    public long Key { get; set; }
    public string Title { get; set; }
    public OwnerCompany Owner { get; set; }
    public int StartYear { get; set; }
    public Month StartMonth { get; set; }
    public int YearDuration { get; set; }

    //public MainConsultant MainConsultant { get; set; }
    public virtual ICollection<ParticipantConsultant> Consultants { get; set; } = new List<ParticipantConsultant>();
    public virtual ICollection<Year> Years { get; set; } = new List<Year>();
    public virtual ICollection<LongTermObjective> LongTermObjectives { get; set; } = new List<LongTermObjective>();
    

    public void SetYears(int startYear, Month startMonth, int yearDuration)
    {
        StartYear = startYear;
        StartMonth = startMonth;
        YearDuration = yearDuration;

        var endMonth = startMonth == Month.January ? Month.December : startMonth - 1;
        for (int year = startYear; year < startYear + yearDuration; year++)
        {
            var start = new YearMonth(year, startMonth);
            var end= new YearMonth(startMonth > endMonth ? year + 1 : year, endMonth);
            Years.Add(new Year(year, start, end));
        }
    }
   
    public LongTermObjective AddLongTermObjective(Guid id, string title, int order)
    {
        var objective = new LongTermObjective(id, title, order);
        LongTermObjectives.AddEntity(objective);
        return objective;
    }
    
}

