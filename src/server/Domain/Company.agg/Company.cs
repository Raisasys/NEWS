using Core;

namespace Domain;

[AutoGeneratedKey]
public class Company : Aggregate
{
    protected Company() { }

    public Company(string name, PhoneNumber phoneNumber, Email email, Address address) 
    {
        Name = name;
        PhoneNumber = phoneNumber;
        Email = email;
        Address = address;
    }

    public string Name { get; set; }
    //public CompanyOwner Owner { get; set; }
    public PhoneNumber PhoneNumber { get; set; }
    public Email Email { get; set; }
    public Address Address { get; set; }
    
    public virtual ICollection<Person> Personnel { get; set; } = new List<Person>();


    /*public void SetOwner(Guid personId)
    {
        Owner = new CompanyOwner(personId);
    }*/

    public Person AddOwner(User user)
    {
        var person = Personnel.FirstOrDefault(i => i.User.Email == user.Id);
        if (person == null)
        {
            person = new Person(new UserValue(user.Id,user.FullName), PersonRole.Owner);
            Personnel.Add(person);
        }
        else if(person.Role == PersonRole.Who)
        {
            person.Role = PersonRole.Both;
        }
        return person;
    }

    public Person AddWho(User user)
    {
        var person = Personnel.FirstOrDefault(i => i.User.Email == user.Id);
        if (person == null)
        {
            person = new Person(new UserValue(user.Id, user.FullName), PersonRole.Who);
            Personnel.Add(person);
        }
        else if (person.Role == PersonRole.Owner)
        {
            person.Role = PersonRole.Both;
        }
        return person;
    }

}


